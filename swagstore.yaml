apiVersion: v1
kind: Service
metadata:
  name: adservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 9555
    targetPort: 9555
  selector:
    app: adservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: cartservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 7070
    targetPort: 7070
  selector:
    app: cartservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: checkoutservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 5050
    targetPort: 5050
  selector:
    app: checkoutservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: currencyservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 7000
    targetPort: 7000
  selector:
    app: currencyservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: emailservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 5000
    targetPort: 8080
  selector:
    app: emailservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: frontend
  namespace: default
spec:
  ports:
  - name: http
    port: 80
    targetPort: 8080
  selector:
    app: frontend
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: frontend-external
  namespace: default
spec:
  ports:
  - name: http
    nodePort: 31000
    port: 80
    targetPort: 8080
  selector:
    app: frontend
  type: NodePort
---
apiVersion: v1
kind: Service
metadata:
  name: paymentservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
  selector:
    app: paymentservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: productcatalogservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 3550
    targetPort: 3550
  selector:
    app: productcatalogservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: recommendationservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 8080
    targetPort: 8080
  selector:
    app: recommendationservice
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: redis-cart
  namespace: default
spec:
  ports:
  - name: tcp-redis
    port: 6379
    targetPort: 6379
  selector:
    app: redis-cart
  type: ClusterIP
---
apiVersion: v1
kind: Service
metadata:
  name: shippingservice
  namespace: default
spec:
  ports:
  - name: grpc
    port: 50051
    targetPort: 50051
  selector:
    app: shippingservice
  type: ClusterIP
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/env: dev-auto-inject
    tags.datadoghq.com/service: adservice
    tags.datadoghq.com/version: 0.5.0
  name: adservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: adservice
  template:
    metadata:
      annotations:
        admission.datadoghq.com/java-lib.version: v1.3.0
      labels:
        admission.datadoghq.com/enabled: "true"
        app: adservice
        tags.datadoghq.com/env: dev-auto-inject
        tags.datadoghq.com/service: adservice
        tags.datadoghq.com/version: 0.5.0
    spec:
      containers:
      - env:
        - name: PORT
          value: "9555"
        - name: DISABLE_STATS
          value: "1"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DD_PROFILING_ENABLED
          value: "true"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        - name: DD_INVENTORIES_CONFIGURATION_ENABLED
          value: "true"
        image: 10.5.2.58:31443/adservice:1a829ed@sha256:d125885ec3f7924e98a41f04916e5b11614281911fc8090ecb8c563092501913
        name: server
        ports:
        - containerPort: 9555
        resources:
          limits:
            cpu: 300m
            memory: 300Mi
          requests:
            cpu: 200m
            memory: 180Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/env: dev-auto-inject
    tags.datadoghq.com/service: cartservice
    tags.datadoghq.com/version: 0.5.0
  name: cartservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: cartservice
  template:
    metadata:
      labels:
        admission.datadoghq.com/enabled: "true"
        app: cartservice
        tags.datadoghq.com/env: dev-auto-inject
        tags.datadoghq.com/service: cartservice
        tags.datadoghq.com/version: 0.5.0
    spec:
      containers:
      - env:
        - name: REDIS_ADDR
          value: redis-cart:6379
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        - name: DD_RUNTIME_METRICS_ENABLED
          value: "true"
        image: 10.5.2.58:31443/cartservice:1a829ed@sha256:c1a408f44c0396e490500e3e7e2dd525f560f878017cc35059b46712b19a692a
        name: server
        ports:
        - containerPort: 7070
        resources:
          limits:
            cpu: 300m
            memory: 128Mi
          requests:
            cpu: 200m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/env: dev-auto-inject
    tags.datadoghq.com/service: checkoutservice
    tags.datadoghq.com/version: 0.5.0
  name: checkoutservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: checkoutservice
  template:
    metadata:
      labels:
        admission.datadoghq.com/enabled: "true"
        app: checkoutservice
        tags.datadoghq.com/env: dev-auto-inject
        tags.datadoghq.com/service: checkoutservice
        tags.datadoghq.com/version: 0.5.0
    spec:
      containers:
      - env:
        - name: PORT
          value: "5050"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: productcatalogservice:3550
        - name: SHIPPING_SERVICE_ADDR
          value: shippingservice:50051
        - name: PAYMENT_SERVICE_ADDR
          value: paymentservice:50051
        - name: EMAIL_SERVICE_ADDR
          value: emailservice:5000
        - name: CURRENCY_SERVICE_ADDR
          value: currencyservice:7000
        - name: CART_SERVICE_ADDR
          value: cartservice:7070
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_STATS
          value: "1"
        - name: DISABLE_TRACING
          value: "1"
        - name: DD_PROFILING_ENABLED
          value: "true"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        image: 10.5.2.58:31443/checkoutservice:1a829ed@sha256:484b88a395bcb7f0086070582e8af8acc67d626479b92e137b155ec0397eca5d
        name: server
        ports:
        - containerPort: 5050
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/env: dev-auto-inject
    tags.datadoghq.com/service: currencyservice
    tags.datadoghq.com/version: 0.5.0
  name: currencyservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: currencyservice
  template:
    metadata:
      annotations:
        admission.datadoghq.com/js-lib.version: v3.9.1
      labels:
        admission.datadoghq.com/enabled: "true"
        app: currencyservice
        tags.datadoghq.com/env: dev-auto-inject
        tags.datadoghq.com/service: currencyservice
        tags.datadoghq.com/version: 0.5.0
    spec:
      containers:
      - env:
        - name: PORT
          value: "7000"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_DEBUGGER
          value: "1"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        - name: DD_PROFILING_ENABLED
          value: "true"
        image: 10.5.2.58:31443/currencyservice:1a829ed@sha256:b047fd96fbc145789c937d21da9424f672f9a0ec0533a6bf7fc6ddf19cff0fa4
        name: server
        ports:
        - containerPort: 7000
          name: grpc
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/env: dev-auto-inject
    tags.datadoghq.com/service: emailservice
    tags.datadoghq.com/version: 0.5.0
  name: emailservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: emailservice
  template:
    metadata:
      annotations:
        admission.datadoghq.com/python-lib.version: v1.6.3
      labels:
        admission.datadoghq.com/enabled: "true"
        app: emailservice
        tags.datadoghq.com/env: dev-auto-inject
        tags.datadoghq.com/service: emailservice
        tags.datadoghq.com/version: 0.5.0
    spec:
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: DISABLE_PROFILER
          value: "1"
        - name: ENABLE_TRACING
          value: "0"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        - name: DD_RUNTIME_METRICS_ENABLED
          value: "true"
        - name: DD_PROFILING_ENABLED
          value: "true"
        image: 10.5.2.58:31443/emailservice:1a829ed@sha256:c4eb2e75531237272d19d9a58eede0bd3accaa0e0f6b9ce0e7d75368729bdda0
        name: server
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/env: dev-auto-inject
    tags.datadoghq.com/service: frontend
    tags.datadoghq.com/version: 0.5.0
  name: frontend
  namespace: default
spec:
  selector:
    matchLabels:
      app: frontend
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      labels:
        admission.datadoghq.com/enabled: "true"
        app: frontend
        tags.datadoghq.com/env: dev-auto-inject
        tags.datadoghq.com/service: frontend
        tags.datadoghq.com/version: 0.5.0
    spec:
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: productcatalogservice:3550
        - name: CURRENCY_SERVICE_ADDR
          value: currencyservice:7000
        - name: CART_SERVICE_ADDR
          value: cartservice:7070
        - name: RECOMMENDATION_SERVICE_ADDR
          value: recommendationservice:8080
        - name: SHIPPING_SERVICE_ADDR
          value: shippingservice:50051
        - name: CHECKOUT_SERVICE_ADDR
          value: checkoutservice:5050
        - name: AD_SERVICE_ADDR
          value: adservice:9555
        - name: ENABLE_TRACING
          value: "0"
        - name: ENABLE_PROFILER
          value: "0"
        - name: DD_PROFILING_ENABLED
          value: "true"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        image: 10.5.2.58:31443/frontend:1a829ed@sha256:0c04245de2cc9130349afc84b742b22d4dc98fb986f55693d88503f35dd2a76f
        livenessProbe:
          httpGet:
            httpHeaders:
            - name: Cookie
              value: shop_session-id=x-liveness-probe
            path: /_healthz
            port: 8080
          initialDelaySeconds: 10
        name: server
        ports:
        - containerPort: 8080
        readinessProbe:
          httpGet:
            httpHeaders:
            - name: Cookie
              value: shop_session-id=x-readiness-probe
            path: /_healthz
            port: 8080
          initialDelaySeconds: 10
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/env: dev-auto-inject
    tags.datadoghq.com/service: paymentservice
    tags.datadoghq.com/version: 0.5.0
  name: paymentservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: paymentservice
  template:
    metadata:
      annotations:
        admission.datadoghq.com/js-lib.version: v3.9.1
      labels:
        admission.datadoghq.com/enabled: "true"
        app: paymentservice
        tags.datadoghq.com/env: dev-auto-inject
        tags.datadoghq.com/service: paymentservice
        tags.datadoghq.com/version: 0.5.0
    spec:
      containers:
      - env:
        - name: PORT
          value: "50051"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_DEBUGGER
          value: "1"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        - name: DD_PROFILING_ENABLED
          value: "true"
        image: 10.5.2.58:31443/paymentservice:1a829ed@sha256:8fce48685a68544e6b909343790ca43da594de10788ec0425da4b0cd9b125778
        name: server
        ports:
        - containerPort: 50051
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/env: dev-auto-inject
    tags.datadoghq.com/service: productcatalogservice
    tags.datadoghq.com/version: 0.5.0
  name: productcatalogservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: productcatalogservice
  template:
    metadata:
      labels:
        admission.datadoghq.com/enabled: "true"
        app: productcatalogservice
        tags.datadoghq.com/env: dev-auto-inject
        tags.datadoghq.com/service: productcatalogservice
        tags.datadoghq.com/version: 0.5.0
    spec:
      containers:
      - env:
        - name: PORT
          value: "3550"
        - name: DISABLE_STATS
          value: "1"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DD_PROFILING_ENABLED
          value: "true"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        image: 10.5.2.58:31443/productcatalogservice:1a829ed@sha256:42480e9dcc2d80b9532b7cb8773197b1a98ee01609ebbd7acb47021175a81ebb
        name: server
        ports:
        - containerPort: 3550
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/env: dev-auto-inject
    tags.datadoghq.com/service: recommendationservice
    tags.datadoghq.com/version: 0.5.0
  name: recommendationservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: recommendationservice
  template:
    metadata:
      annotations:
        admission.datadoghq.com/python-lib.version: v1.6.3
      labels:
        admission.datadoghq.com/enabled: "true"
        app: recommendationservice
        tags.datadoghq.com/env: dev-auto-inject
        tags.datadoghq.com/service: recommendationservice
        tags.datadoghq.com/version: 0.5.0
    spec:
      containers:
      - env:
        - name: PORT
          value: "8080"
        - name: PRODUCT_CATALOG_SERVICE_ADDR
          value: productcatalogservice:3550
        - name: DISABLE_PROFILER
          value: "1"
        - name: DISABLE_DEBUGGER
          value: "1"
        - name: ENABLE_TRACING
          value: "0"
        - name: DD_GRPC_SERVICE
          value: recommendationservice
        - name: DD_PROFILING_ENABLED
          value: "true"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        image: 10.5.2.58:31443/recommendationservice:1a829ed@sha256:78376288b4887fe6077f3b075e975f79c236e9b0e68fadefd462d8e179e96b0f
        name: server
        ports:
        - containerPort: 8080
        resources:
          limits:
            cpu: 200m
            memory: 450Mi
          requests:
            cpu: 100m
            memory: 220Mi
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: redis-cart
  namespace: default
spec:
  selector:
    matchLabels:
      app: redis-cart
  template:
    metadata:
      labels:
        app: redis-cart
    spec:
      containers:
      - image: redis:alpine
        livenessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        name: redis
        ports:
        - containerPort: 6379
        readinessProbe:
          periodSeconds: 5
          tcpSocket:
            port: 6379
        resources:
          limits:
            cpu: 125m
            memory: 256Mi
          requests:
            cpu: 70m
            memory: 200Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
        volumeMounts:
        - mountPath: /data
          name: redis-data
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      volumes:
      - emptyDir: {}
        name: redis-data
---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    tags.datadoghq.com/env: dev-auto-inject
    tags.datadoghq.com/service: shippingservice
    tags.datadoghq.com/version: 0.5.0
  name: shippingservice
  namespace: default
spec:
  selector:
    matchLabels:
      app: shippingservice
  template:
    metadata:
      labels:
        admission.datadoghq.com/enabled: "true"
        app: shippingservice
        tags.datadoghq.com/env: dev-auto-inject
        tags.datadoghq.com/service: shippingservice
        tags.datadoghq.com/version: 0.5.0
    spec:
      containers:
      - env:
        - name: PORT
          value: "50051"
        - name: DISABLE_STATS
          value: "1"
        - name: DISABLE_TRACING
          value: "1"
        - name: DISABLE_PROFILER
          value: "1"
        - name: DD_PROFILING_ENABLED
          value: "true"
        - name: DD_LOGS_INJECTION
          value: "true"
        - name: DD_TRACE_SAMPLE_RATE
          value: "1"
        image: 10.5.2.58:31443/shippingservice:1a829ed@sha256:b7c12faf58cf7fe34f83ad94672475a2cfe5c0a0433a8bd9bff4ad7acc5c6536
        name: server
        ports:
        - containerPort: 50051
        resources:
          limits:
            cpu: 200m
            memory: 128Mi
          requests:
            cpu: 100m
            memory: 64Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: loadgenerator
  namespace: default
spec:
  replicas: 1
  selector:
    matchLabels:
      app: loadgenerator
  template:
    metadata:
      annotations:
        sidecar.istio.io/rewriteAppHTTPProbers: "true"
      labels:
        app: loadgenerator
    spec:
      containers:
      - env:
        - name: FRONTEND_ADDR
          value: frontend:80
        - name: USERS
          value: "10"
        image: 10.5.2.58:31443/loadgenerator:1a829ed@sha256:8bf2243ecb854ecf7bbf4ee917dbac227f1ba0a35801aab01a10e7c1b7866df1
        name: main
        resources:
          limits:
            cpu: 500m
            memory: 512Mi
          requests:
            cpu: 300m
            memory: 256Mi
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
      initContainers:
      - command:
        - /bin/sh
        - -exc
        - |
          echo "Init container pinging frontend: ${FRONTEND_ADDR}..."
          STATUSCODE=$(wget --server-response http://${FRONTEND_ADDR} 2>&1 | awk '/^  HTTP/{print $2}')
          if test $STATUSCODE -ne 200; then
              echo "Error: Could not reach frontend - Status code: ${STATUSCODE}"
              exit 1
          fi
        env:
        - name: FRONTEND_ADDR
          value: frontend:80
        image: busybox:latest
        name: frontend-check
        securityContext:
          allowPrivilegeEscalation: false
          capabilities:
            drop:
            - all
          privileged: false
          readOnlyRootFilesystem: true
      restartPolicy: Always
      securityContext:
        fsGroup: 1000
        runAsGroup: 1000
        runAsNonRoot: true
        runAsUser: 1000
      serviceAccountName: default
      terminationGracePeriodSeconds: 5
